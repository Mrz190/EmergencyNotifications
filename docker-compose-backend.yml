version: '3.8'

services:
  traefik:
    image: traefik:v3.0
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"         # Traefik get 80 for HTTP
      - "--entrypoints.websecure.address=:443"   # Traefik get 443 for HTTPS
      - "--api.insecure=true"
    ports:
      - "5041:80"   # HTTP
      - "8080:8080"  # Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml
    networks:
      - shared-network

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`localhost`)"
      - "traefik.http.services.api.loadbalancer.server.port=5041"  # API port
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5041  # API port
      - ConnectionStrings__DbConnection=Host=postgres;Port=5432;Database=EmergencyNotifications;Username=postgres;Password=root;
      - Redis__ConnectionString=redis:6379
      - MongoSettings__ConnectionString=mongodb://mongo:27017
      - MongoSettings__DatabaseName=NotificationDb
    deploy:
      replicas: 2
    depends_on:
      - postgres
    networks:
      - shared-network

  postgres:
    image: postgres:17
    container_name: emergencynotifications-postgres-1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=EmergencyNotifications
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/backup.sql:/docker-entrypoint-initdb.d/backup.sql:ro
    networks:
      - shared-network
      
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - shared-network

  mongo:
    image: mongodb/mongodb-community-server:7.0.3-ubi9
    ports:
      - "27017:27017"
    networks:
      - shared-network

networks:
  shared-network:
    driver: bridge

volumes:
  postgres_data:
  postgres_clone_data: